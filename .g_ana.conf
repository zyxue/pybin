[system]
    SEQS = 
    CDTS = w, m
    TMPS = 300,
    NUMS = 

[data]
    outputdir = '/scratch/p/pomes/zyxue/mono_meo/resb40_all'
    database = '/scratch/p/pomes/zyxue/mono_meo/mono_meo.db'

[dirchy]
    dirchy_d1 = '{seq}{cdt}300_su'
    dirchy_d2 = '{seq}{cdt}300s{num}'
    dirchy_d3 = ''
    dirchy_d4 = ''
    prefix = '{seq}{cdt}300s{num}'

[ndx_format]
    ndxf1 = 'ndx_{seq}'
    ndxf2 = 'ndx_{cdt}'
    ndxf3 = 'ndx_end1'
    ndxf4 = 'ndx_end2'
    ndxf5 = 'ndx_q'

[ndx_input]
    # Up: backbone, N, O, and (OE1 & NE2 if GLN exists)
    # Un: CG1 & CG2 for VAL, CB & CG & CD for PRO, CB for ALA, CA for GLY, CB & CD for GLN
    # Vp: O, C[1-8] for o
    # Vn: C for meo, eth, pro
    
    # 1 [ Protein ], 9 [SideChain-H] default 13 groups	
    
    # (GVPGV)7 ENDs not included, CB of VAL not included. Useless groups have to be deleted separately due to gromacs set.
    ndx_sq1 = '1 & !r ACE NH2 & a O N\n r GLY & a CA\n r VAL & a CG1 CG2\n r PRO & a CB CG CD\n 15|16|17\n del 15\n del 15\n del 15\n'
    # (GGVGV)7
    ndx_sq2 = '1 & !r ACE NH2 & a O N\n r GLY & a CA\n r VAL & a CG1 CG2\n 15|16\n del 15\n del 15\n'
    # (PGV)7
    ndx_sq3 = '1 & !r ACE NH2 & a O N\n r GLY & a CA\n r VAL & a CG1 CG2\n r PRO & a CB CG CD\n 15|16|17\n del 15\n del 15\n del 15\n'
    # (GVGVA)7
    ndx_sq4 = '1 & !r ACE NH2 & a O N\n r GLY & a CA\n r VAL & a CG1 CG2\n r ALA & a CB\n 15|16|17\n del 15\n del 15\n del 15\n'
    # (G)35 # in order to be consistent
    ndx_sq5 = '1 & !r ACE NH2 & a O N\n r GLY & a CA\n'
    # (GV)18
    ndx_sq6 = '1 & !r ACE NH2 & a O N\n r GLY & a CA\n r VAL & a CG1 CG2\n 15|16\n del 15\n del 15\n'
    # (Q)35
    ndx_sq7 = '1 & !r ACE NH2 & a O N OE1 NE2\n r GLN & a CB CG\n'
    # (A)35
    ndx_sq8 = '1 & !r ACE NH2 & a O N\n r ALA & a CB\n'
    # (P)35
    ndx_sq9 = '1 & !r ACE NH2 & a O N\n r PRO & a CB CG CD\n'
    
    ndx_w = '12 & a OW\n 12 & a OW\n'
    ndx_m = '12 & a OA\n 12 & a C \n'
    ndx_e = '12 & a OA\n 12 & a C \n'
    ndx_p = '12 & a OA\n 12 & a C \n'
    ndx_o = 'a C1 C2 C3 C4 C5 C6 C7 C8\n a C1 C2 C3 C4 C5 C6 C7 C8\n'

    ndx_end1 = 'r ACE & a CH3\n'
    ndx_end2 = 'r NH2 & a N  \n'					      # used to calculate end2end distance
    ndx_q = 'q\n'