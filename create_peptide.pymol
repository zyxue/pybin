for aa in "PPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPP": cmd._alt(string.lower(aa))

for aa in "VVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV": cmd._alt(string.lower(aa))

for aa in "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA": cmd._alt(string.lower(aa))

for aa in "FPGFGVGVGGIPGVAGVPGVGGVPGVGGVPGVGISPEAQAAAAAKAAKYGVGTPAAAAAKAAAKAAQFGLVPGVGVAPG\
VGVAPGVGVAPGVGLAPGVGVAPGVGVAPGVGVAPGIGPEAQAAAAAKAAKYGVGTPAAAAAKAAAKAAQFGLVPGVGV\
APGVGVAPGVGVAPGVGLAPGVGVAPGVGVAPGVGVAPGIGP": cmd._alt(string.lower(aa))

pwd=/home/zyxue/labwork/monomers_vacuo/polyaav300; for i in a c d e f g h i k l m n p q r s t v w y; do cd y35v300; vmd beforenpt/y35v300_nvt.gro y35v300_md.xtc; cd /home/zyxue/labwork/monomers_vacuo/polyaav300; done

for aa in "GVGVGVGVGVGVGVGVGV": cmd._alt(string.lower(aa))

for aa in "GAGAGAGAGAGAGAGAGA": cmd._alt(string.lower(aa))

for aa in "AAAAAAAAAAAAAAAAAA": cmd._alt(string.lower(aa))

for aa in "AAAAAAAKAAKAAAAAAA": cmd._alt(string.lower(aa))

for aa in "AAAAAAAYAAAYAAAAAAA": cmd._alt(string.lower(aa))


for aa in "GVPGVGVPGVGVPGVGVPGVGVPGVGVPGVGVPGV": cmd._alt(string.lower(aa))


# slsq1t003

for aa in "BGVPGVGVPGVGVPGVGVPGVGVPGVGVPGVGVPGVGGVPGVGVPGVGVPGVGVPGVGVPGVGVPGVGVPGVGGVPGVGVPGVGVPGVGVPGVGVPGVGVPGVGVPGV": cmd._alt(string.lower(aa))

# slsq1t064

for aa incmd._alt(string.lower(aa))

# slsq1t128

for aa incmd._alt(string.lower(aa))
